{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/Dialogs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","active","Post","props","content","ava","message","like","MyPosts","postsBlock","ProfileInfo","hat","Profile","DialogItem","path","id","dialog","name","Message","Dialogs","dialogs","dialogsItem","messages","App","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.389c0e68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2G52t\",\"item\":\"Navbar_item__Yr9KI\",\"active\":\"Navbar_active__3YByj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2IEOm\",\"dialogsItems\":\"Dialogs_dialogsItems__jGSX3\",\"dialog\":\"Dialogs_dialog__22nGl\",\"active\":\"Dialogs_active__1RUAC\",\"messages\":\"Dialogs_messages__3oOx8\",\"message\":\"Dialogs_message__EwFYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Post_ava__2agg8\",\"like\":\"Post_like__2Oocl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Ipvi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1qSj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hat\":\"ProfileInfo_hat__11Hbi\"};","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://s2.logaster.com/static/v3/img/products/logo.png\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/setting\" activeClassName={s.active}>Setting</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <div className={s.ava}>\r\n                    <img\r\n                        src='https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'/>\r\n                    {props.message}\r\n                    <div className={s.like}>\r\n                        <img src='https://banner2.cleanpng.com/20181001/rhs/kisspng-like-button-social-media-image-facebook-messenger-health-insurance-life-insurance-and-medicare-plan-5bb209e2eacd98.4287911215383945949618.jpg' /> 777\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = () => {\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <div>\r\n                    My post\r\n                </div>\r\n                <textarea/>\r\n                <button>add post</button>\r\n                <Post message={\"Hello, it's my first post lol\"}/>\r\n                <Post message={\"hu a you man?\"}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.hat}>\r\n                <img src=\"https://interier-foto.ru/wp-content/uploads/dlinnye-foto-4.jpg\"/>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <img src='https://ramonllullenglish4all.files.wordpress.com/2010/02/african_man.jpg'/>\r\n                </div>\r\n                <div>\r\n                    ava + descritpion\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPosts />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                <DialogItem id={\"1\"} name={\"Kleo\"} />\r\n                <DialogItem id={\"2\"} name={\"Hiperion\"} />\r\n                <DialogItem id={\"3\"} name={\"Suzi\"} />\r\n                <DialogItem id={\"4\"} name={\"Gektar\"} />\r\n                <DialogItem id={\"5\"} name={\"Chuck\"} />\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Message message={\"Hey\"} />\r\n                <Message message={\"Yo man\"} />\r\n                <Message message={\"hu you piople?\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className=\"app-wrapper-content\">\r\n                <Route path='/profile' component={Profile}/>\r\n                <Route path='/dialogs' component={Dialogs}/>\r\n            </div>\r\n        </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}